41 2 0
38 1
8 252 396 301 347 1 0
8 318 396 367 347 1 0
22 258 348 424 328 0 \NUL
Read Register 1 Address
8 432 396 481 347 1 0
8 498 396 547 347 1 0
22 438 348 604 328 0 \NUL
Read Register 2 Address
20 720 414 787 395 0
wadr_0
20 654 414 721 395 0
wadr_1
8 606 396 655 347 1 0
8 672 396 721 347 1 0
22 612 348 767 328 0 \NUL
Write Register Address
20 480 414 547 395 0
adr2_1
20 546 414 613 395 0
adr2_0
20 366 414 433 395 0
adr1_0
20 300 414 367 395 0
adr1_1
19 166 108 233 89 0
reg0_2
19 154 84 221 65 0
reg0_3
19 190 156 257 137 0
reg0_0
19 178 132 245 113 0
reg0_1
11 258 108 285 10 0 1
22 144 36 255 16 0 \NUL
Register 0 Value
19 322 108 389 89 0
reg1_2
19 310 84 377 65 0
reg1_3
19 346 156 413 137 0
reg1_0
19 334 132 401 113 0
reg1_1
11 414 108 441 10 0 1
22 300 36 411 16 0 \NUL
Register 1 Value
19 478 108 545 89 0
reg2_2
19 466 84 533 65 0
reg2_3
19 502 156 569 137 0
reg2_0
19 490 132 557 113 0
reg2_1
11 570 108 597 10 0 1
22 456 36 567 16 0 \NUL
Register 2 Value
19 634 108 701 89 0
reg3_2
19 622 84 689 65 0
reg3_3
19 658 156 725 137 0
reg3_0
19 646 132 713 113 0
reg3_1
11 726 108 753 10 0 1
22 612 36 723 16 0 \NUL
Register 3 Value
19 640 264 707 245 0
alu_2
19 628 240 695 221 0
alu_3
19 664 312 731 293 0
alu_0
19 652 288 719 269 0
alu_1
11 732 264 759 166 0 1
22 648 192 724 172 0 \NUL
ALU Output
25 12 528 119 432
8 12 396 61 347 1 0
8 6 288 55 239 1 1
8 6 192 55 143 1 1
20 66 414 133 395 0
sel
20 60 210 127 191 0
clear
20 150 510 217 491 0
kpad_3
20 138 534 205 515 0
kpad_2
20 132 558 199 539 0
kpad_1
20 120 582 187 563 0
kpad_0
19 328 264 395 245 0
in1_2
19 316 240 383 221 0
in1_3
19 352 312 419 293 0
in1_0
19 340 288 407 269 0
in1_1
11 420 264 447 166 0 1
22 336 192 414 172 0 \NUL
ALU Input 1
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 118 10 0 \NUL
Agrawal, Viveka
22 11 54 74 34 0 \NUL
viagrawa
19 166 264 233 245 0
kpad_2
19 154 240 221 221 0
kpad_3
19 190 312 257 293 0
kpad_0
19 178 288 245 269 0
kpad_1
11 258 264 285 166 0 1
22 150 192 249 172 0 \NUL
Keypad Output
22 12 144 117 124 0 \NUL
Clear Registers
22 18 324 100 304 0 \NUL
Store Select
20 60 294 127 275 0
update
22 12 240 121 220 0 \NUL
Update Register
19 484 264 551 245 0
in2_2
19 472 240 539 221 0
in2_3
19 508 312 575 293 0
in2_0
19 496 288 563 269 0
in2_1
11 576 264 603 166 0 1
22 492 192 570 172 0 \NUL
ALU Input 2
22 18 348 230 328 0 \NUL
0 = Keypad input, 1 = ALU result
22 12 102 149 82 0 \NUL
CSE 12, Spring 2021
22 228 450 478 430 0 \NUL
Select clear to initialize registers to 0.
22 228 474 557 454 0 \NUL
Select store select to choose which value to store.
22 228 498 508 478 0 \NUL
Choose read and write register addresses.
22 228 522 727 502 0 \NUL
Read addresses = reg sources of ALU inputs, Write address = reg to save to
22 228 546 480 526 0 \NUL
Press update to save value to register
22 228 594 668 574 0 \NUL
You are only permitted to modify the header comment on this page.
1 655 404 652 371
1 721 404 718 371
1 481 404 478 371
1 547 404 544 371
1 367 404 364 371
1 301 404 298 371
1 259 74 218 74
1 230 98 259 80
1 242 122 259 86
1 254 146 259 92
1 415 74 374 74
1 386 98 415 80
1 398 122 415 86
1 410 146 415 92
1 571 74 530 74
1 542 98 571 80
1 554 122 571 86
1 566 146 571 92
1 727 74 686 74
1 698 98 727 80
1 710 122 727 86
1 722 146 727 92
1 733 230 692 230
1 704 254 733 236
1 716 278 733 242
1 728 302 733 248
1 52 167 61 200
1 58 371 67 404
1 421 230 380 230
1 392 254 421 236
1 404 278 421 242
1 416 302 421 248
1 116 500 151 500
1 116 506 139 524
1 116 512 133 548
1 116 518 121 572
1 259 230 218 230
1 230 254 259 236
1 242 278 259 242
1 254 302 259 248
1 52 263 61 284
1 577 230 536 230
1 548 254 577 236
1 560 278 577 242
1 572 302 577 248
38 2
22 294 42 484 22 0 \NUL
Placeholder signal/recievers
22 18 480 388 460 0 \NUL
These are only present so circuit simulates without error
22 18 504 290 484 0 \NUL
Remove these once logic is implemented
22 18 528 266 508 0 \NUL
You are permitted to modify this page
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 118 10 0 \NUL
Agrawal, Viveka
22 12 54 75 34 0 \NUL
viagrawa
22 12 102 149 82 0 \NUL
CSE 12, Spring 2021
38 3
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 118 10 0 \NUL
Agrawal, Viveka
22 12 54 75 34 0 \NUL
viagrawa
22 12 102 149 82 0 \NUL
CSE 12, Spring 2021
19 174 250 241 231 0
wadr_1
19 173 288 240 269 0
wadr_0
19 172 334 239 315 0
update
31 314 294 363 209 0 4
20 392 162 459 143 0
x_3
20 510 223 577 204 0
x_2
20 518 300 585 281 0
x_1
20 448 353 515 334 0
x_0
22 304 80 459 60 0 \NUL
Write Register Address
5 265 349 314 300 0
22 46 431 726 411 0 \NUL
This circuit uses a MUX using write register 0 and 1 which will determine the register I write my value to.
1 237 278 315 278
1 360 236 393 152
1 360 242 511 213
1 360 248 519 290
1 360 254 449 343
1 315 272 238 240
1 236 324 266 324
1 315 290 311 324
38 4
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 118 10 0 \NUL
Agrawal, Viveka
22 12 54 75 34 0 \NUL
viagrawa
22 12 102 149 82 0 \NUL
CSE 12, Spring 2021
24 130 237 179 165 1 1 1
24 132 440 181 368 1 1 1
24 602 444 651 372 1 1 1
24 593 233 642 161 1 1 1
20 663 402 730 383 0
reg0_3
20 197 398 264 379 0
reg0_2
20 662 191 729 172 0
reg0_1
20 193 195 260 176 0
reg0_0
19 21 279 88 260 0
clear
19 484 272 551 253 0
clear
5 99 294 148 245 0
5 562 287 611 238 0
19 20 484 87 465 0
clear
5 101 499 150 450 0
19 488 479 555 460 0
clear
5 578 494 627 445 0
19 26 195 93 176 0
v_0
19 480 191 547 172 0
v_1
19 22 398 89 379 0
v_2
19 489 402 556 383 0
v_3
19 22 237 89 218 0
x_0
19 485 230 552 211 0
x_0
19 22 441 89 422 0
x_0
19 490 438 557 419 0
x_0
15 106 167 155 118
15 109 364 158 315
15 564 168 613 119
15 573 375 622 326
22 175 149 224 129 0 \NUL
reg0_0
22 644 144 693 124 0 \NUL
reg0_1
22 183 347 232 327 0 \NUL
reg0_2
22 651 353 700 333 0 \NUL
reg0_3
22 342 95 413 75 0 \NUL
Register 0
22 164 533 548 513 0 \NUL
This is a 4-bit register I created which stores a 4-bit value. 
22 146 564 558 544 0 \NUL
This register is able to quickly change based on the user input.
1 176 185 194 185
1 639 181 663 181
1 178 388 198 388
1 648 392 664 392
1 85 269 100 269
1 145 269 144 233
1 548 262 563 262
1 608 262 607 229
1 84 474 102 474
1 147 474 146 436
1 552 469 579 469
1 624 469 616 440
1 90 185 131 185
1 544 181 594 181
1 86 388 133 388
1 553 392 603 392
1 86 227 131 203
1 549 220 594 199
1 86 431 133 406
1 554 428 603 410
1 152 142 144 167
1 155 339 146 370
1 610 143 607 163
1 619 350 616 374
38 5
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 118 10 0 \NUL
Agrawal, Viveka
22 12 54 75 34 0 \NUL
viagrawa
22 12 102 149 82 0 \NUL
CSE 12, Spring 2021
24 134 236 183 164 1 1 1
24 141 424 190 352 1 1 1
24 611 428 660 356 1 1 1
24 597 232 646 160 1 1 1
20 672 386 739 367 0
reg1_3
20 206 382 273 363 0
reg1_2
20 666 190 733 171 0
reg1_1
20 197 194 264 175 0
reg1_0
19 25 278 92 259 0
clear
19 488 271 555 252 0
clear
5 103 293 152 244 0
5 566 286 615 237 0
19 29 468 96 449 0
clear
5 110 483 159 434 0
19 497 463 564 444 0
clear
5 587 478 636 429 0
19 30 194 97 175 0
v_0
19 484 190 551 171 0
v_1
19 31 382 98 363 0
v_2
19 498 386 565 367 0
v_3
19 26 236 93 217 0
x_1
19 489 229 556 210 0
x_1
19 31 425 98 406 0
x_1
19 499 422 566 403 0
x_1
15 110 166 159 117
15 118 348 167 299
15 568 167 617 118
15 582 359 631 310
22 179 148 228 128 0 \NUL
reg1_0
22 648 143 697 123 0 \NUL
reg1_1
22 192 331 241 311 0 \NUL
reg1_2
22 659 337 708 317 0 \NUL
reg1_3
22 343 88 414 68 0 \NUL
Register 1
22 164 533 548 513 0 \NUL
This is a 4-bit register I created which stores a 4-bit value. 
22 146 564 558 544 0 \NUL
This register is able to quickly change based on the user input.
1 180 184 198 184
1 643 180 667 180
1 187 372 207 372
1 657 376 673 376
1 89 268 104 268
1 149 268 148 232
1 552 261 567 261
1 612 261 611 228
1 93 458 111 458
1 156 458 155 420
1 561 453 588 453
1 633 453 625 424
1 94 184 135 184
1 548 180 598 180
1 95 372 142 372
1 562 376 612 376
1 90 226 135 202
1 553 219 598 198
1 95 415 142 390
1 563 412 612 394
1 156 141 148 166
1 164 323 155 354
1 614 142 611 162
1 628 334 625 358
38 6
24 132 235 181 163 1 1 1
24 137 435 186 363 1 1 1
24 607 439 656 367 1 1 1
24 595 231 644 159 1 1 1
20 668 397 735 378 0
reg2_3
20 202 393 269 374 0
reg2_2
20 664 189 731 170 0
reg2_1
20 194 193 261 174 0
reg2_0
19 23 277 90 258 0
clear
19 486 270 553 251 0
clear
5 101 292 150 243 0
5 564 285 613 236 0
19 25 479 92 460 0
clear
5 106 494 155 445 0
19 493 474 560 455 0
clear
5 583 489 632 440 0
19 28 193 95 174 0
v_0
19 482 189 549 170 0
v_1
19 27 393 94 374 0
v_2
19 494 397 561 378 0
v_3
19 24 235 91 216 0
x_2
19 487 228 554 209 0
x_2
19 27 436 94 417 0
x_2
19 495 433 562 414 0
x_2
15 108 165 157 116
15 114 359 163 310
15 566 166 615 117
15 578 370 627 321
22 177 147 226 127 0 \NUL
reg2_0
22 646 142 695 122 0 \NUL
reg2_1
22 188 342 237 322 0 \NUL
reg2_2
22 655 348 704 328 0 \NUL
reg2_3
22 333 86 404 66 0 \NUL
Register 2
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 118 10 0 \NUL
Agrawal, Viveka
22 12 54 75 34 0 \NUL
viagrawa
22 12 102 149 82 0 \NUL
CSE 12, Spring 2021
22 164 533 548 513 0 \NUL
This is a 4-bit register I created which stores a 4-bit value. 
22 146 564 558 544 0 \NUL
This register is able to quickly change based on the user input.
1 178 183 195 183
1 641 179 665 179
1 183 383 203 383
1 653 387 669 387
1 87 267 102 267
1 147 267 146 231
1 550 260 565 260
1 610 260 609 227
1 89 469 107 469
1 152 469 151 431
1 557 464 584 464
1 629 464 621 435
1 92 183 133 183
1 546 179 596 179
1 91 383 138 383
1 558 387 608 387
1 88 225 133 201
1 551 218 596 197
1 91 426 138 401
1 559 423 608 405
1 154 140 146 165
1 160 334 151 365
1 612 141 609 161
1 624 345 621 369
38 7
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 118 10 0 \NUL
Agrawal, Viveka
22 12 54 75 34 0 \NUL
viagrawa
22 12 102 149 82 0 \NUL
CSE 12, Spring 2021
24 131 235 180 163 1 1 1
24 136 432 185 360 1 1 1
24 606 436 655 364 1 1 1
24 594 231 643 159 1 1 1
20 667 394 734 375 0
reg3_3
20 201 390 268 371 0
reg3_2
20 663 189 730 170 0
reg3_1
20 193 193 260 174 0
reg3_0
19 22 277 89 258 0
clear
19 485 270 552 251 0
clear
5 100 292 149 243 0
5 563 285 612 236 0
19 24 476 91 457 0
clear
5 105 491 154 442 0
19 492 471 559 452 0
clear
5 582 486 631 437 0
19 27 193 94 174 0
v_0
19 481 189 548 170 0
v_1
19 26 390 93 371 0
v_2
19 493 394 560 375 0
v_3
19 23 235 90 216 0
x_3
19 486 228 553 209 0
x_3
19 24 433 91 414 0
x_3
19 493 430 560 411 0
x_3
15 107 165 156 116
15 113 356 162 307
15 565 166 614 117
15 577 367 626 318
22 176 147 225 127 0 \NUL
reg3_0
22 645 142 694 122 0 \NUL
reg3_1
22 187 339 236 319 0 \NUL
reg3_2
22 654 345 703 325 0 \NUL
reg3_3
22 339 92 410 72 0 \NUL
Register 3
22 164 533 548 513 0 \NUL
This is a 4-bit register I created which stores a 4-bit value. 
22 146 564 558 544 0 \NUL
This register is able to quickly change based on the user input.
1 177 183 194 183
1 640 179 664 179
1 182 380 202 380
1 652 384 668 384
1 86 267 101 267
1 146 267 145 231
1 549 260 564 260
1 609 260 608 227
1 88 466 106 466
1 151 466 150 428
1 556 461 583 461
1 628 461 620 432
1 91 183 132 183
1 545 179 595 179
1 90 380 137 380
1 557 384 607 384
1 87 225 132 201
1 550 218 595 197
1 88 423 137 398
1 557 420 607 402
1 153 140 145 165
1 159 331 150 362
1 611 141 608 161
1 623 342 620 366
38 8
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 118 10 0 \NUL
Agrawal, Viveka
22 12 54 75 34 0 \NUL
viagrawa
22 12 102 149 82 0 \NUL
CSE 12, Spring 2021
19 36 314 103 295 0
adr1_0
19 21 281 88 262 0
adr1_1
31 173 253 222 168 0 1
19 32 146 99 127 0
reg3_0
19 13 182 80 163 0
reg2_0
19 18 217 85 198 0
reg1_0
19 18 250 85 231 0
reg0_0
14 125 337 174 288
19 505 204 572 185 0
adr1_0
19 490 171 557 152 0
adr1_1
31 642 143 691 58 0 1
19 501 36 568 17 0
reg3_1
19 482 72 549 53 0
reg2_1
19 487 107 554 88 0
reg1_1
19 487 140 554 121 0
reg0_1
14 598 221 647 172
19 40 545 107 526 0
adr1_0
19 25 512 92 493 0
adr1_1
31 177 484 226 399 0 1
19 36 377 103 358 0
reg3_2
19 17 413 84 394 0
reg2_2
19 22 448 89 429 0
reg1_2
19 22 481 89 462 0
reg0_2
14 128 580 177 531
19 511 442 578 423 0
adr1_0
19 495 409 562 390 0
adr1_1
31 647 381 696 296 0 1
19 507 274 574 255 0
reg3_3
19 487 310 554 291 0
reg2_3
19 492 345 559 326 0
reg1_3
19 492 378 559 359 0
reg0_3
14 600 471 649 422
20 245 217 312 198 0
in1_0
20 249 448 316 429 0
in1_2
20 710 107 777 88 0
in1_1
20 720 345 787 326 0
in1_3
22 209 90 428 70 0 \NUL
Read Register 1 Address Circuits
22 333 526 750 506 0 \NUL
This is a read address which gives the ALU a value as an input.
22 342 557 738 537 0 \NUL
The address of the read register is then decided by the user.
1 174 195 96 136
1 174 201 77 172
1 174 207 82 207
1 174 213 82 240
1 174 231 85 271
1 174 237 100 304
1 171 312 174 249
1 643 85 565 26
1 643 91 546 62
1 643 97 551 97
1 643 103 551 130
1 643 121 554 161
1 643 127 569 194
1 644 196 643 139
1 178 426 100 367
1 178 432 81 403
1 178 438 86 438
1 178 444 86 471
1 178 462 89 502
1 178 468 104 535
1 174 555 178 480
1 648 323 571 264
1 648 329 551 300
1 648 335 556 335
1 648 341 556 368
1 648 359 559 399
1 648 365 575 432
1 646 446 648 377
1 246 207 219 207
1 711 97 688 97
1 250 438 223 438
1 721 335 693 335
38 9
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 118 10 0 \NUL
Agrawal, Viveka
22 12 54 75 34 0 \NUL
viagrawa
22 12 102 149 82 0 \NUL
CSE 12, Spring 2021
19 36 314 103 295 0
adr2_0
19 21 281 88 262 0
adr2_1
31 173 253 222 168 0 1
19 32 146 99 127 0
reg3_0
19 13 182 80 163 0
reg2_0
19 18 217 85 198 0
reg1_0
19 18 250 85 231 0
reg0_0
14 125 337 174 288
19 507 205 574 186 0
adr2_0
19 491 172 558 153 0
adr2_1
31 643 144 692 59 0 1
19 502 37 569 18 0
reg3_1
19 483 73 550 54 0
reg2_1
19 488 108 555 89 0
reg1_1
19 488 141 555 122 0
reg0_1
14 599 222 648 173
19 40 545 107 526 0
adr2_0
19 25 512 92 493 0
adr2_1
31 177 484 226 399 0 1
19 36 377 103 358 0
reg3_2
19 17 413 84 394 0
reg2_2
19 22 448 89 429 0
reg1_2
19 22 481 89 462 0
reg0_2
14 128 580 177 531
19 511 443 578 424 0
adr2_0
19 496 410 563 391 0
adr2_1
31 648 382 697 297 0 1
19 508 275 575 256 0
reg3_3
19 488 311 555 292 0
reg2_3
19 493 346 560 327 0
reg1_3
19 493 379 560 360 0
reg0_3
14 601 472 650 423
20 245 217 312 198 0
in2_0
20 249 448 316 429 0
in2_2
20 711 108 778 89 0
in2_1
20 721 346 788 327 0
in2_3
22 208 100 427 80 0 \NUL
Read Register 2 Address Circuits
22 328 528 745 508 0 \NUL
This is a read address which gives the ALU a value as an input.
22 337 559 733 539 0 \NUL
The address of the read register is then decided by the user.
1 174 195 96 136
1 174 201 77 172
1 174 207 82 207
1 174 213 82 240
1 174 231 85 271
1 174 237 100 304
1 171 312 174 249
1 644 86 566 27
1 644 92 547 63
1 644 98 552 98
1 644 104 552 131
1 644 122 555 162
1 644 128 571 195
1 645 197 644 140
1 178 426 100 367
1 178 432 81 403
1 178 438 86 438
1 178 444 86 471
1 178 462 89 502
1 178 468 104 535
1 174 555 178 480
1 649 324 572 265
1 649 330 552 301
1 649 336 557 336
1 649 342 557 369
1 649 360 560 400
1 649 366 575 433
1 647 447 649 378
1 246 207 219 207
1 712 98 689 98
1 250 438 223 438
1 722 336 694 336
38 10
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 118 10 0 \NUL
Agrawal, Viveka
22 12 54 75 34 0 \NUL
viagrawa
22 12 102 149 82 0 \NUL
CSE 12, Spring 2021
31 662 172 711 87 0 1
22 428 293 512 273 0 \NUL
ALU Outputs
14 615 274 664 225
19 574 52 641 33 0
in1_2
19 547 91 614 72 0
in1_3
19 530 127 597 108 0
in1_0
19 528 169 595 150 0
in1_1
19 539 200 606 181 0
in2_1
19 559 242 626 223 0
in2_0
22 701 67 733 47 0 \NUL
1 bit
20 718 136 785 117 0
alu_1
31 339 183 388 98 0 1
19 253 52 320 33 0
in1_1
19 226 91 293 72 0
in1_2
19 209 127 276 108 0
in1_3
19 207 169 274 150 0
in1_0
19 212 204 279 185 0
in2_1
19 238 242 305 223 0
in2_0
14 288 274 337 225
20 401 147 468 128 0
alu_0
22 365 70 397 50 0 \NUL
0 bit
31 354 478 403 393 0 1
14 315 580 364 531
19 266 358 333 339 0
in1_3
19 239 397 306 378 0
in1_0
19 222 433 289 414 0
in1_1
19 220 475 287 456 0
in1_2
19 231 506 298 487 0
in2_1
19 251 548 318 529 0
in2_0
22 377 368 409 348 0 \NUL
2 bit
20 410 442 477 423 0
alu_2
31 662 485 711 400 0 1
14 615 587 664 538
19 574 365 641 346 0
in1_0
19 547 405 614 386 0
in1_1
19 530 440 597 421 0
in1_2
19 528 482 595 463 0
in1_3
19 539 513 606 494 0
in2_1
19 559 555 626 536 0
in2_0
22 684 380 716 360 0 \NUL
3 bit
20 721 449 788 430 0
alu_3
22 12 268 223 248 0 \NUL
The ALU is a 4-bit bitwise circuit
22 11 299 173 279 0 \NUL
which has a left rotation.
22 11 330 246 310 0 \NUL
The amount given from ALU Input 2 
22 11 360 228 340 0 \NUL
is what the bitwise left rotation of
22 13 392 145 372 0 \NUL
ALU Input 1 returns.
1 638 42 663 114
1 611 81 663 120
1 594 117 663 126
1 592 159 663 132
1 603 190 663 150
1 623 232 663 156
1 661 249 663 168
1 708 126 719 126
1 317 42 340 125
1 290 81 340 131
1 276 194 340 161
1 302 232 340 167
1 340 179 334 249
1 385 137 402 137
1 273 117 340 137
1 271 159 340 143
1 330 348 355 420
1 303 387 355 426
1 286 423 355 432
1 284 465 355 438
1 295 496 355 456
1 315 538 355 462
1 361 555 355 474
1 400 432 411 432
1 638 355 663 427
1 611 395 663 433
1 594 430 663 439
1 592 472 663 445
1 603 503 663 463
1 623 545 663 469
1 661 562 663 481
1 708 439 722 439
38 11
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 118 10 0 \NUL
Agrawal, Viveka
22 12 54 75 34 0 \NUL
viagrawa
22 12 102 149 82 0 \NUL
CSE 12, Spring 2021
22 316 62 477 42 0 \NUL
ALU and Keypad Output 
31 154 218 203 133 0 2
31 624 192 673 107 0 2
31 174 394 223 309 0 2
31 636 383 685 298 0 2
19 60 154 127 135 0
alu_0
19 40 195 107 176 0
kpad_0
19 83 329 150 310 0
alu_2
19 63 370 130 351 0
kpad_2
19 524 134 591 115 0
alu_1
19 504 175 571 156 0
kpad_1
19 546 319 613 300 0
alu_3
19 526 360 593 341 0
kpad_3
14 107 275 156 226
14 125 460 174 411
14 591 440 640 391
14 576 246 625 197
20 226 182 293 163 0
v_0
20 251 358 318 339 0
v_2
20 699 156 766 137 0
v_1
20 706 347 773 328 0
v_3
22 226 134 258 114 0 \NUL
bit 0
22 703 113 735 93 0 \NUL
bit 1
22 243 320 275 300 0 \NUL
bit 2
22 706 306 738 286 0 \NUL
bit 3
19 47 237 114 218 0
sel
19 69 415 136 396 0
sel
19 507 220 574 201 0
sel
19 528 410 595 391 0
sel
22 147 534 601 514 0 \NUL
These MUX lets the user choose between the ALU and keypad output.
1 124 144 155 172
1 104 185 155 178
1 147 319 175 348
1 127 360 175 354
1 588 124 625 146
1 568 165 625 152
1 610 309 637 337
1 590 350 637 343
1 155 214 153 250
1 175 390 171 435
1 625 188 622 221
1 637 379 637 415
1 200 172 227 172
1 220 348 252 348
1 670 146 700 146
1 682 337 707 337
1 111 227 155 202
1 133 405 175 378
1 571 210 625 176
1 592 400 637 367
39 16777215
47 0
40 1 6 6
50 800 600
51 0 100
30
System
16
700
0
0
0
0
0
34
